#!/usr/local/bin/python3
pkg_name = "docs"
pkg_name_npm = "docs"

from script import *
import requests


c = spawn("Releasing...")

def release():
    sb.call("npm publish", shell=True)

package_manager = os.environ.get(f"{pkg_name}_PKG") or "yarn"


if len(sys.argv) > 1:
    package_manager = sys.argv[1]


os.environ[f"{pkg_name}_ENV"] = 'production'
run('build')

# test
proc = sb.Popen("yarn test", stdout=sb.PIPE, shell=True)
streamdata = proc.communicate()[0]
if (proc.returncode == 0):
    c.log(f"[italic green] Tests passed!")
else:
    c.warn(f"[bold red] Tests failed!")


# set version
v = requests.get(f"https://registry.npmjs.org/{pkg_name_npm}").json()['dist-tags']['latest']
c.log(f"Latest version published on npm: {str(v)}")

package = {}
with open('package.json', 'r') as f:
    package = json.load(f)


pv = package['version']

tag = "bold green" if str(v) == str(pv) else "bold yellow"
c.log(f"[{tag}]Current local version: {pv}")

new_version = c.input(f"Input new version please: ")

if len(new_version) ==  0:
    new_version = pv


c.done()
c = spawn(f"publish this as version: {new_version}")
if c.input(f"Confirm?", "[y/n]") == 'y':
    package['version'] = new_version
    with open('package.json', 'w') as outfile:
        json.dump(package, outfile, indent=4)

    release()
    c.done("Package published succesfully to the NPM repository.")
else:
    c.warn('Aborted')
    c.done()


